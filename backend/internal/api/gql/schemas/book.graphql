input UploadBookInput {
    file: Upload!
}

type BookPayload {
    id: UUID!
    title: String!
    hash: String!
    uploadedAt: DateTime!
    uploadedBy: UUID!
    url: String!
}

type UserBookPayload {
    id: UUID!
    title: String!
    hash: String!
    uploadedAt: DateTime!
    uploadedBy: UUID!
    url: String!
}

input BookInput {
    id: UUID!
}

input UserBooksTitleInput {
    userID: UUID!
    title: String!
}

input userBookTitleInput {
    userID: UUID!
    title: String!
}

extend type Query {
    book(input: BookInput): BookPayload!  @Auth
    userBooks(limit: Uint64, offset: Uint64): [BookPayload!]! @Auth
    userBookTitle(input: userBookTitleInput): BookPayload! @Auth
}

extend type Mutation {
    uploadBook(input: UploadBookInput): BookPayload! @Auth
    deleteBook(input: BookInput): Boolean! @Auth
}